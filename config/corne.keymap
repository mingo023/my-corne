/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E             &kp R             &kp T        &kp Y          &kp U      &kp I      &kp O    &kp P     &kp MINUS
&mo 1      &kp A  &kp S  &kp D             &kp F             &kp G        &kp H          &kp J      &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C             &kp V             &kp B        &kp N          &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp LG(SPACE)
                         &kp LEFT_CONTROL  &kp LEFT_COMMAND  &kp SPACE    &kp BACKSPACE  &kp ENTER  &mo 4
            >;
        };

        nav {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp GRAVE  &kp TILDE       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp DOLLAR          &none       &none                 &kp ASTERISK  &none   &none   &none
&none  &none      &kp LEFT_SHIFT  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp EXCLAMATION     &kp MINUS   &kp NON_US_BACKSLASH  &trans        &trans  &trans  &trans
&none  &trans     &trans          &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp HASH            &kp ESCAPE  &kp EQUAL             &trans        &trans  &trans  &trans
                                  &mo 2                 &kp LEFT_ALT           &kp LEFT_COMMAND    &none       &mo 3                 &none
            >;
        };

        numedia {
            bindings = <
&none        &kp NUMBER_1  &kp NUMBER_2    &kp NUMBER_3       &kp NUMBER_4     &kp N5    &kp NUMBER_6  &kp N7  &kp N8  &kp N9          &kp N0  &trans
&trans       &trans        &kp LEFT_SHIFT  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &trans    &none         &none   &none   &kp LEFT_SHIFT  &trans  &trans
&bootloader  &trans        &trans          &none              &none            &trans    &none         &none   &none   &none           &trans  &trans
                                           &trans             &trans           &trans    &trans        &trans  &trans
            >;
        };

        movement {
            bindings = <
&trans  &trans  &trans          &kp E   &kp R              &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp LEFT_SHIFT  &trans  &trans             &kp G     &kp H   &kp J   &kp K   &kp L   &trans  &trans
&trans  &trans  &trans          &trans  &trans             &trans    &trans  &trans  &trans  &trans  &trans  &trans
                                &trans  &kp RIGHT_COMMAND  &trans    &trans  &trans  &trans
            >;
        };

        app {
            bindings = <
&trans  &trans         &trans         &trans         &trans  &trans           &trans  &trans  &trans  &trans  &kp LS(LA(P))  &trans
&trans  &kp LA(LS(A))  &kp LS(LA(S))  &kp LA(LS(D))  &trans  &trans           &trans  &trans  &trans  &trans  &trans         &trans
&trans  &trans         &trans         &kp LA(LS(C))  &trans  &kp LS(LA(B))    &trans  &trans  &trans  &trans  &trans         &trans
                                      &trans         &trans  &trans           &trans  &trans  &trans
            >;
        };
    };
};
